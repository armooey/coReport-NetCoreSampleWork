@using coReport.Models.AdminViewModels
@using coReport.Models.ProjectViewModels
@model AdminPanelViewModel
@{
    ViewData["Title"] = "پنل ادمین";
}

<link href="~/lib/Chart.js/Chart.min.css" rel="stylesheet" />
<link href="~/lib/select2/css/select2.min.css" rel="stylesheet" />
<link href="~/lib/quill/quill.bubble.css" rel="stylesheet" />
<link href="~/lib/quill/quill.snow.css" rel="stylesheet" />
<div>

    <div class="row" style="margin-top:40px">
        <div class="col-md border border-dark p-2 box-widget">
            <span><b>فعالیت کاربران</b></span>
            <a class="btn btn-primary btn-sm float-left" asp-action="ManageUsers" asp-controller="Admin">مدیریت کاربران</a>
            <hr />
            <canvas height="300" width="500" id="reportsChart"></canvas>
        </div>
        <div class="col-md border border-dark p-2 box-widget-scrollable">
            <span><b>پیام ها</b></span>
            <button class="btn btn-primary btn-sm float-left" onclick="FetchUsers()">ارسال پیام</button>
            <hr />
            @if (Model.Messages.Count() == 0)
            {
                <div class="text-center"><b>پیامی موجود نیست.</b></div>
            }
            else
            {
                foreach (var message in Model.Messages)
                {
                    <partial name="_MessagePartialView" model="message" />
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md border border-dark p-2 box-widget-scrollable">
            <span><b>پروژه ها</b></span>
            <button class="btn btn-primary btn-sm float-left" data-toggle="modal" data-target="#createProject">ایجاد پروژه جدید</button>
            <hr />
            @if (Model.Projects.Count() == 0)
            {
                <div class="text-center"><b>پروژه‌ای موجود نیست.</b></div>
            }
            else
            {
                foreach (var project in Model.Projects)
                {
                    <partial name="ProjectPartialView" model="project" />
                }
            }
        </div>
        <div class="col-md border border-dark p-2 box-widget-scrollable">
            <h6><b>اخطار ها</b></h6>
            <hr />
            @if (Model.Warnings.Count() == 0)
            {
                <div class="text-center"><b>اخطاری موجود نیست.</b></div>
            }
            else
            {
                foreach (var warning in Model.Warnings)
                {
                    <partial name="WarningPartialView" model="warning" />
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 border border-dark p-2 box-widget-scrollable">
            <span><b>درخت فعالیت‌ها</b></span>
            <button class="btn btn-danger btn-sm float-left" data-toggle="modal" data-target="#deleteActivity">حذف فعالیت</button>
            <button class="btn btn-primary btn-sm float-left ml-1" data-toggle="modal" data-target="#createActivity">ایجاد فعالیت/زیرفعالیت جدید</button>
            <hr />
            @if (Model.Activities.Count() == 0)
            {
                <div class="text-center"><b>فعالیتی موجود نیست.</b></div>
            }
            else
            {
                <ul id="tree">
                    @foreach (var activity in Model.Activities)
                    {
                        <li>
                            <span>@activity.Name</span>
                            @if (activity.SubActivities.Any())
                            {
                                <ul>
                                    @foreach (var subactivity in activity.SubActivities)
                                    {
                                        @if (!subactivity.IsDeleted)
                                        {
                                            <li class="subactivity">@subactivity.Name </li>
                                        }
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>

@* ****************************************** *@
@* Modals *@
@* ****************************************** *@

<div id="createProject" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered">

        <div class="modal-content">
            <div class="modal-header">
                <h6>ایجاد پروژه</h6>
            </div>
            <form asp-action="AddProject" method="post" role="form">
                <div class="form-group" style="margin-top: 10px">
                    <label class="col-md-4">عنوان پروژه</label>
                    <div class="col-md-10">
                        <input type="text" name="projectName" data-val="true" data-val-required="عنوان پروژه اجباری است." class="form-control" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="projectName" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
                    <button type="submit" class="btn btn-primary">ثبت</button>
                </div>
            </form>
        </div>

    </div>
</div>

<div id="createActivity" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered">

        <div class="modal-content">
            <div class="modal-header">
                <h6>ایجاد فعالیت/زیرفعالیت</h6>
            </div>
            <form asp-action="AddActivity" method="post" role="form">
                <div class="form-group" style="margin-top: 10px">
                    <span class="col-md"> ایجاد زیرفعالیت؟</span>
                    <input id="is_subactivity" type="checkbox" />
                </div>
                <div hidden class="form-group">
                    <label class="col-md-4 control-label">فعالیت پدر</label>
                    <div class="col-md-10">
                        <select id="activity_select" disabled type="text" name="parentActivityName" data-val="true"
                                data-val-required="انتخاب فعالیت پدر اجباری است." class="form-control" style="width:100%">
                            <option></option>
                            @foreach (var activity in Model.Activities)
                            {
                                <option value="@activity.Id">@activity.Name</option>
                            }
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="parentActivityName" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label id="activity_name" class="col-md-4 control-label">عنوان فعالیت</label>
                    <div class="col-md-10">
                        <input type="text" name="activityName" data-val="true" data-val-required="عنوان فعالیت اجباری است." class="form-control" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="activityName" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
                    <button type="submit" class="btn btn-primary">ثبت</button>
                </div>
            </form>
        </div>

    </div>
</div>

<div id="deleteActivity" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-centered">

        <div class="modal-content">
            <div class="modal-header">
                <h6>حذف فعالیت/زیرفعالیت</h6>
            </div>
            <div class="form-group mt-2">
                <label class="col-md-4 control-label">فعالیت</label>
                <div class="col-md-10">
                    <select id="activity_select_for_delete" type="text" name="selectedActivityName" data-val="true"
                            data-val-required="انتخاب فعالیت اجباری است." class="form-control" style="width:100%">
                        <option></option>
                        @foreach (var activity in Model.Activities)
                        {
                            <option value="@activity.Id">&lowast;@activity.Name</option>
                            foreach (var subactivity in activity.SubActivities)
                            {
                                @if (!subactivity.IsDeleted)
                                {
                                    <option value="@subactivity.Id">&emsp;&emsp;@subactivity.Name</option>
                                }
                            }
                        }
                    </select>
                    <span class="text-danger field-validation-valid" data-valmsg-for="selectedActivityName" data-valmsg-replace="true"></span>
                    <div class="text-muted small mt-1">در صورت انتخاب یک فعالیت اصلی، تمام زیرفعالیت‌های آن حذف می‌شوند.</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
                <button onclick="DeleteActivity()" class="btn btn-primary">ثبت</button>
            </div>
        </div>

    </div>
</div>

<div class="modal" id="message_loading" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-body text-center">
                <div class="sk-circle">
                    <div class="sk-circle1 sk-child"></div>
                    <div class="sk-circle2 sk-child"></div>
                    <div class="sk-circle3 sk-child"></div>
                    <div class="sk-circle4 sk-child"></div>
                    <div class="sk-circle5 sk-child"></div>
                    <div class="sk-circle6 sk-child"></div>
                    <div class="sk-circle7 sk-child"></div>
                    <div class="sk-circle8 sk-child"></div>
                    <div class="sk-circle9 sk-child"></div>
                    <div class="sk-circle10 sk-child"></div>
                    <div class="sk-circle11 sk-child"></div>
                    <div class="sk-circle12 sk-child"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="view_message" class="modal fade">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white rounded-0">
                <div><i class="fas fa-envelope"></i> <span id="message_title"></span></div>
                <div><i class="fas fa-user"></i> <span id="message_sender"></span></div>
            </div>
            <div class="form-group">
                <div class="col-md">
                    <div id="read_message_editor"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

<div id="send_message" class="modal fade">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h6>ارسال پیام</h6>
            </div>
            <form asp-action="SendMessage" asp-controller="Message" asp-route-returnUrl="@Url.Action("AdminPanel","Admin")"
                  id="messageForm" method="post" role="form">
                <div class="form-group">
                    <label id="activity_name" class="col-md-4 control-label">عنوان</label>
                    <div class="col-md-6">
                        <input type="text" name="messageTitle" data-val="true" data-val-required="فیلد عنوان اجباری است." class="form-control" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="messageTitle" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-4 control-label">ارسال به</label>
                    <div class="col-md-6">
                        <select id="user_select" style="width:100%" name="receivers" data-val="true" data-val-required="فیلد دریافت کنندگان اجباری است." class="form-control" multiple>
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="receivers" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md">
                        <textarea id="message" hidden name="messageText"></textarea>
                        <textarea id="message_raw_text" hidden name="messageRaw" data-val="true" data-val-required="متن پیام اجباری است."></textarea>
                        <div id="send_message_editor"></div>
                        <span class="text-danger field-validation-valid" data-valmsg-for="messageRaw" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
                    <button type="button" onclick="SendMessage()" class="btn btn-primary">ارسال</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="user_activity_details" class="modal fade">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <span>جزئیات فعالیت <span id="detail_type"></span> در تاریخ <span id="date"></span></span>
            </div>
            <div>
                <table id="details_table" class="table table-sm table-hover">
                    <thead class="thead-light">
                        <tr class="text-center">
                            <th>نام</th>
                            <th>زمان</th>
                        </tr>
                    </thead>
                    <tbody>

                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/lib/Chart.js/Chart.min.js"></script>
    <script src="~/lib/bootbox.js/bootbox.min.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/select2/js/i18n/fa.js"></script>
    <script src="~/lib/quill/quill.js"></script>

    <script>
        $(document).ready(function () {
            $('#activity_select').select2({
                placeholder: 'فعالیت را انتخاب کنید...',
                minimumResultsForSearch: -1,
                dir: 'rtl',
                language: 'fa'
            });
            $('#activity_select_for_delete').select2({
                placeholder: 'فعالیتی که می‌خواهید حذف کنید را انتخاب کنید...',
                dir: 'rtl',
                language: 'fa'
            });

            $('#user_select').select2({
                dir: 'rtl',
                language: 'fa'
            });

            $('#is_subactivity').click(function () {
                if ($(this).prop("checked") == true) {
                    $("#activity_select").prop("disabled", false);
                    $("#activity_select").parent().parent().prop("hidden", false);
                    $("#activity_name").text('عنوان زیرفعالیت');
                }
                else if ($(this).prop("checked") == false) {
                    $("#activity_select").prop("disabled", true);
                    $("#activity_select").parent().parent().prop("hidden", true);
                    $("#activity_name").text('عنوان فعالیت');
                }
            });

             //preparing data for chart
            var days = JSON.parse('@Html.Raw(Json.Serialize(@Model.Days))');
            var userReportCount = JSON.parse('@Html.Raw(Json.Serialize(@Model.UsersReportCount))');
            var managerReportCount = JSON.parse('@Html.Raw(Json.Serialize(@Model.ManagersReportCount))');
            //Creating chart
            var context = document.getElementById('reportsChart').getContext('2d');
            var chart = new Chart(context, {
                type: 'bar',
                data: {
                    labels: days,
                    datasets: [
                        {
                            data: userReportCount,
                            label: "گزارشات کارمندان",
                            backgroundColor: "#483b9b",
                            fill: true
                        },
                        {
                            data: managerReportCount,
                            label: "گزارشات مدیران",
                            backgroundColor: "#b2812c",
                            fill: true
                        }
                    ]
                },
                options: {

                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                stepSize: 1
                            }
                        }]
                    }
                }
            });

            $('#reportsChart').on('click', function (evt) {
                var activePoints = chart.getElementAtEvent(evt);
                if (activePoints.length > 0) {
                    var label = activePoints[0]._model.datasetLabel;
                    var clickedBarTypeFlag;
                    //check which type of bar the user clicked
                    if (label == "گزارشات کارمندان")
                        clickedBarTypeFlag = true;
                    else
                        clickedBarTypeFlag = false;

                    var index = activePoints[0]["_index"];
                    var date = chart.data.labels[index];
                    $('#message_loading').modal('show');
                    $.ajax({
                        url: "@Url.Action("GetUserActivityDetails","Admin")",
                        data: { dayIndex: index + 1, typeFlag: clickedBarTypeFlag }
                    }).done(function (ajaxResult) {
                        $('#message_loading').modal('hide');
                        $('#details_table tbody tr').remove();
                        $('#date').text(date);
                        if (clickedBarTypeFlag == true) {
                            $('#detail_type').text("کارمندان");
                        }
                        else {
                            $('#detail_type').text("مدیران");
                        }

                        ajaxResult.forEach(function (result) {
                            $('#details_table tbody').append("<tr><td>" + result.value[0] + "</td><td>" + result.value[1] + "</td></tr>");
                        });
                        $('#user_activity_details').modal('show');
                    }).fail(function () {
                        $('#message_loading').modal('hide');
                        bootbox.alert({
                            closeButton: false,
                            message: "خطای ارتباط با سرور.",
                            buttons: {
                                ok: {
                                    label: 'بستن'
                                }
                            }
                        });
                    });
                }
            });

            $('.seen-False').attr('style', 'border: 2px solid !important');
            $('.ended-True').attr('style', 'background-color:lightgray');
            $('.ql-editor').attr('style', 'border: none !important');
        });

        //Quil rich text initialization
        var FontAttributor = Quill.import('attributors/class/font');
        FontAttributor.whitelist = [
            'arial', 'default', 'times-new-roman'
        ];
        var Size = Quill.import('attributors/style/size');
        Size.whitelist = ['12px', '15px', '18px', '20px'];
        Quill.register(Size, true);
        Quill.register(FontAttributor, true);
        var quill = new Quill('#read_message_editor', {
            theme: 'bubble',
            readOnly: true
        });

        var toolbarOptions = [
            [{ 'font': ['arial', 'default', 'times-new-roman'] }],
            [{ 'size': ['12px', '15px', '18px', '20px'] }],
            ['bold', 'italic', 'underline', 'strike'],
            [{ 'align': [] }],
            [{ 'direction': 'rtl' }],
            [{ 'color': [] }, { 'background': [] }],
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'header': [1, 2, 3, false] }],
            ['code-block']
        ];

        var message_editor = new Quill('#send_message_editor', {
            modules: {
                toolbar: toolbarOptions
            },
            theme: 'snow'
        });

        //Function for creating collapsable treeview
        jQuery.fn.extend({
            createTreeView: function (o) {
                var openedClass = 'fas fa-minus-circle';
                var closedClass = 'fas fa-plus-circle';

                if (typeof o != 'undefined') {
                    if (typeof o.openedClass != 'undefined') {
                        openedClass = o.openedClass;
                    }
                    if (typeof o.closedClass != 'undefined') {
                        closedClass = o.closedClass;
                    }
                };

                //initialize each of the top levels
                var tree = $(this);
                tree.addClass("tree");
                tree.find('li').has("ul").each(function () {
                    var branch = $(this); //li with children ul
                    branch.prepend("<i class='indicator " + closedClass + "'></i>");
                    branch.addClass('branch');
                    branch.on('click', function (e) {
                        if (this == e.target) {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    })
                    branch.children().children().toggle();
                });
                //fire event from the dynamically added icon
                tree.find('.branch .indicator').each(function () {
                    $(this).on('click', function () {
                        $(this).closest('li').click();
                    });
                });
                //fire event to open branch if the li contains an anchor instead of text
                tree.find('.branch>a').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
                //fire event to open branch if the li contains a button instead of text
                tree.find('.branch>button').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
            }
        });

        //Initialize treeview
        $('#tree').createTreeView();


        function FetchUsers()
        {
            $.ajax({
                url: "@Url.Action("GetUsers","Account")"
            }).done(function (ajaxResult) {
                if (ajaxResult.length != 0) {
                    ajaxResult.forEach(function (element) {
                        var option = new Option(element.Value, element.Key);
                        $('#user_select').append(option).trigger('change');
                    });
                }
                $('#send_message').modal('toggle');
            }).fail(function () {
                bootbox.alert({
                    closeButton: false,
                    message: "خطا در ارتباط با سرور!",
                    buttons: {
                        ok: {
                            label: 'بستن'
                        }
                    }
                });
            });
        }

        function SendMessage()
        {
            $('#message').val(JSON.stringify(message_editor.getContents()));
            $('#message_raw_text').val(message_editor.getText());
            $('#messageForm').submit();
        }

        function DeleteMessage(id) {
            bootbox.confirm({
                closeButton: false,
                message: "آیا می‌خواهید این پیام را حذف کنید؟",
                buttons: {
                    confirm: {
                        label: 'بله',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'خیر',
                        className: 'btn-secondary'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            url: "@Url.Action("DeleteMessage","Message")",
                            data: { id: id }
                        }).done(function (ajaxResult) {
                            if (ajaxResult)
                                location.reload();
                            else {
                                bootbox.alert({
                                    closeButton: false,
                                    title: "خطا",
                                    message: "هنگام حذف پیام مشکلی پیش آمده لطفا مجددا سعی کنید.",
                                    buttons: {
                                        ok: {
                                            label: 'بستن'
                                        }
                                    }
                                });
                            }
                        });
                    }
                }
            });
        }


        function ViewMessage(id) {
            $('#message_loading').modal('show');
            $.ajax({
                url: "@Url.Action("ViewMessage","Message")",
                data: { id: id }
            }).done(function (ajaxResult) {
                $('#message_loading').modal('hide');
                if (ajaxResult == null) {
                    bootbox.alert({
                        closeButton: false,
                        message: "هنگام مشاهده پیام مشکلی پیش آمده لطفا مجددا سعی کنید.",
                        buttons: {
                            ok: {
                                label: 'بستن'
                            }
                        }
                    });
                }
                else {
                    $('#message_title').text(' ' + ajaxResult[0]);
                    $('#message_sender').text(' ' + ajaxResult[1]);
                    quill.setContents(jQuery.parseJSON(ajaxResult[2]));
                    $('#view_message').modal('show');
                    $('#message_' + id).attr('style', 'border: 1px solid !important');
                }
            }).fail(function () {
                $('#message_loading').modal('hide');
                bootbox.alert({
                        closeButton: false,
                        message: "خطای ارتباط با سرور.",
                        buttons: {
                            ok: {
                                label: 'بستن'
                            }
                        }
                    });
            });
        }

        function EndProject(id)
        {
            bootbox.confirm({
                closeButton: false,
                message: "آیا مایلید به این پروژه خاتمه دهید؟",
                buttons: {
                    confirm: {
                        label: 'بله',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'خیر',
                        className: 'btn-secondary'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            url: "@Url.Action("EndProject","Admin")",
                            data: { id: id }
                        }).done(function (ajaxResult) {
                            if (ajaxResult)
                                location.reload();
                            else {
                                bootbox.alert({
                                    closeButton: false,
                                    message: "هنگام خاتمه پروژه مشکلی پیش آمده لطفا مجددا سعی کنید.",
                                    buttons: {
                                        ok: {
                                            label: 'بستن'
                                        }
                                    }
                                });
                            }
                        });
                    }
                }
            });
        }

        function DeleteActivity()
        {
            bootbox.confirm({
                closeButton: false,
                message: "آیا می‌خواهید این فعالیت را حذف کنید؟",
                buttons: {
                    confirm: {
                        label: 'بله',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'خیر',
                        className: 'btn-secondary'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            url: "@Url.Action("DeleteActivity","Admin")",
                            data: { id: $('#activity_select_for_delete').val() }
                        }).done(function (ajaxResult) {
                            if (ajaxResult)
                                location.reload();
                            else {
                                bootbox.alert({
                                    closeButton: false,
                                    message: "هنگام حذف فعالیت مشکلی پیش آمده لطفا مجددا سعی کنید.",
                                    buttons: {
                                        ok: {
                                            label: 'بستن'
                                        }
                                    }
                                });
                            }
                        });
                    }
                }
            });
        }
    </script>
}